//x,y,l,nbPoints, theta, phi = theta, zMode = "FLAT", customZMode = null, amp = 0, p = 1
let linePaths = [];
linePaths.push(new LinePath(15,7,10,5,-1.57,-1.57,'PARABOLA'));
linePaths.push(new LinePath(15,6.5,0.099,5,-1.57,-1.57,'PARABOLA'));
linePaths.push(new LinePath(15,17,6.33,5,0.045,0.045,'PARABOLA'));
linePaths.push(new LinePath(8.676,16.712,6.329,5,1.322,1.322,'PARABOLA'));
linePaths.push(new LinePath(15,17,6.33,5,-0.402,-0.402,'PARABOLA'));
linePaths.push(new LinePath(20.823,14.518,6.33,5,-1.044,-1.044,'PARABOLA'));
linePaths.push(new LinePath(15,13.33,10,5,0.341,0.341,'PARABOLA'));
linePaths.push(new LinePath(15,13.33,9.999,5,-1.023,-1.023,'PARABOLA'));
linePaths.push(new LinePath(15,33,10,5,-1.57,-1.57,'PARABOLA'));
linePaths.push(new LinePath(15,32.5,0.1,5,-1.57,-1.57,'PARABOLA'));
linePaths.push(new LinePath(15,43,6.33,5,0.087,0.087,'PARABOLA'));
linePaths.push(new LinePath(8.694,42.447,6.33,5,0.575,0.575,'PARABOLA'));
linePaths.push(new LinePath(15,43,6.33,5,-0.019,-0.019,'PARABOLA'));
linePaths.push(new LinePath(21.328,42.877,6.33,5,-0.921,-0.921,'PARABOLA'));
linePaths.push(new LinePath(15,39.33,10,5,0.112,0.112,'PARABOLA'));
linePaths.push(new LinePath(15,39.33,9.999,5,-0.763,-0.763,'PARABOLA'));
linePaths.push(new LinePath(15,59,10,5,-1.57,-1.57,'PARABOLA'));
linePaths.push(new LinePath(15,58.5,0.1,5,-1.57,-1.57,'PARABOLA'));
linePaths.push(new LinePath(15,69,6.329,5,1.058,1.058,'PARABOLA'));
linePaths.push(new LinePath(11.897,74.517,6.33,5,-1.129,-1.129,'PARABOLA'));
linePaths.push(new LinePath(15,69,6.329,5,-0.506,-0.506,'PARABOLA'));
linePaths.push(new LinePath(20.534,72.072,6.33,5,-1.534,-1.534,'PARABOLA'));
linePaths.push(new LinePath(15,65.33,10,5,0.295,0.295,'PARABOLA'));
linePaths.push(new LinePath(15,65.33,10,5,-0.134,-0.134,'PARABOLA'));
linePaths.push(new LinePath(40.32,7,10,5,-1.57,-1.57,'PARABOLA'));
linePaths.push(new LinePath(40.32,6.5,0.099,5,-1.57,-1.57,'PARABOLA'));
linePaths.push(new LinePath(40.32,17,6.329,5,1.471,1.471,'PARABOLA'));
linePaths.push(new LinePath(39.689,23.298,6.329,5,-0.999,-0.999,'PARABOLA'));
linePaths.push(new LinePath(40.32,17,6.329,5,-0.552,-0.552,'PARABOLA'));
linePaths.push(new LinePath(45.707,20.322,6.33,5,-1.249,-1.249,'PARABOLA'));
linePaths.push(new LinePath(40.32,13.33,10,5,1.161,1.161,'PARABOLA'));
linePaths.push(new LinePath(40.32,13.33,10,5,-0.351,-0.351,'PARABOLA'));
linePaths.push(new LinePath(40.32,33,10,5,-1.57,-1.57,'PARABOLA'));
linePaths.push(new LinePath(40.32,32.5,0.1,5,-1.57,-1.57,'PARABOLA'));
linePaths.push(new LinePath(40.32,43,6.33,5,0.325,0.325,'PARABOLA'));
linePaths.push(new LinePath(34.322,40.976,6.33,5,0.547,0.547,'PARABOLA'));
linePaths.push(new LinePath(40.32,43,6.33,5,-0.071,-0.071,'PARABOLA'));
linePaths.push(new LinePath(46.633,42.545,6.329,5,-0.432,-0.432,'PARABOLA'));
linePaths.push(new LinePath(40.32,39.33,9.999,5,0.923,0.923,'PARABOLA'));
linePaths.push(new LinePath(40.32,39.33,10,5,-0.883,-0.883,'PARABOLA'));
linePaths.push(new LinePath(40.32,59,10,5,-1.57,-1.57,'PARABOLA'));
linePaths.push(new LinePath(40.32,58.5,0.1,5,-1.57,-1.57,'PARABOLA'));
linePaths.push(new LinePath(40.32,69,6.33,5,0.722,0.722,'PARABOLA'));
linePaths.push(new LinePath(35.57,64.815,6.33,5,0.22,0.22,'PARABOLA'));
linePaths.push(new LinePath(40.32,69,6.329,5,-0.401,-0.401,'PARABOLA'));
linePaths.push(new LinePath(46.146,71.474,6.329,5,-0.961,-0.961,'PARABOLA'));
linePaths.push(new LinePath(40.32,65.33,10,5,0.78,0.78,'PARABOLA'));
linePaths.push(new LinePath(40.32,65.33,9.999,5,-0.46,-0.46,'PARABOLA'));
linePaths.push(new LinePath(65.64,7,10,5,-1.57,-1.57,'PARABOLA'));
linePaths.push(new LinePath(65.64,6.5,0.099,5,-1.57,-1.57,'PARABOLA'));
linePaths.push(new LinePath(65.64,17,6.329,5,0.071,0.071,'PARABOLA'));
linePaths.push(new LinePath(59.326,16.548,6.33,5,1.396,1.396,'PARABOLA'));
linePaths.push(new LinePath(65.64,17,6.329,5,-0.642,-0.642,'PARABOLA'));
linePaths.push(new LinePath(70.708,13.207,6.33,5,-0.214,-0.214,'PARABOLA'));
linePaths.push(new LinePath(65.64,13.33,10,5,0.902,0.902,'PARABOLA'));
linePaths.push(new LinePath(65.64,13.33,9.999,5,-0.911,-0.911,'PARABOLA'));
linePaths.push(new LinePath(65.64,33,10,5,-1.57,-1.57,'PARABOLA'));
linePaths.push(new LinePath(65.64,32.5,0.1,5,-1.57,-1.57,'PARABOLA'));
linePaths.push(new LinePath(65.64,43,6.33,5,1.213,1.213,'PARABOLA'));
linePaths.push(new LinePath(63.425,48.93,6.329,5,-1.238,-1.238,'PARABOLA'));
linePaths.push(new LinePath(65.64,43,6.33,5,-0.693,-0.693,'PARABOLA'));
linePaths.push(new LinePath(70.508,47.045,6.33,5,-0.866,-0.866,'PARABOLA'));
linePaths.push(new LinePath(65.64,39.33,10,5,0.931,0.931,'PARABOLA'));
linePaths.push(new LinePath(65.64,39.33,10,5,-0.348,-0.348,'PARABOLA'));
linePaths.push(new LinePath(65.64,59,10,5,-1.57,-1.57,'PARABOLA'));
linePaths.push(new LinePath(65.64,58.5,0.1,5,-1.57,-1.57,'PARABOLA'));
linePaths.push(new LinePath(65.64,69,6.33,5,0.66,0.66,'PARABOLA'));
linePaths.push(new LinePath(60.641,72.883,6.33,5,-1.457,-1.457,'PARABOLA'));
linePaths.push(new LinePath(65.64,69,6.329,5,-0.408,-0.408,'PARABOLA'));
linePaths.push(new LinePath(71.45,66.488,6.33,5,-1.01,-1.01,'PARABOLA'));
linePaths.push(new LinePath(65.64,65.33,10,5,0.636,0.636,'PARABOLA'));
linePaths.push(new LinePath(65.64,65.33,10,5,-0.451,-0.451,'PARABOLA'));

mvts[0] = new Movement(0,0,0);
mvts[0].makePath(linePaths);

let sizeX = 80;
let sizeY = 85;
let offsetX = 0;
let offsetY = 0;

boundaries[0] = new Boundary("RECTANGLE",sizeX/2+offsetX,sizeY/2+offsetY,sizeX/2,sizeY/2);

//constructor(id, x, y, mode = 0, spx = 50, spy = 50, sx = 150, sy = 150, sinAmp = 0)
gridSizeX = sizeX/0.5;
gridSizeY = sizeY/0.5;
grids[0] = new Grid(0,offsetX,offsetY,"LINEAR",gridSizeX,gridSizeY,sizeX+gridSizeX,sizeY+gridSizeY);
